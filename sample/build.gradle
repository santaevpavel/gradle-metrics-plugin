buildscript {
    repositories {
        maven {
            url = rootProject.localMavenPath
        }
    }
    dependencies {
        classpath "ru.santaev.gradle-metrics-plugin:gradle-metrics-plugin:0.2.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm'
}

apply plugin: 'ru.santaev.gradle-metrics-plugin'

group 'ru.santaev.gradle-metrics-plugin'
version '0.1.0'

repositories {
    mavenCentral()
    maven {
        url = rootProject.localMavenPath
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "junit:junit:4.12"
    gradleMetricsPluginExtension "ru.santaev.gradle-metrics-plugin:core-extension:0.2.0"
    gradleMetricsPluginExtension "ru.santaev.gradle-metrics-plugin:amplitude-extension:0.1.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task DelayTask {
    doFirst {
        Thread.sleep(5000)
    }
}

jar.dependsOn(DelayTask)

def isRunOnCi = false
def metricsOutputPath = buildDir.path + "/output/metricsOutput.txt"

metrics {
    collectors {
        Build {
            id = "bb"
        }
        TasksCount
        TasksCount2
        FileSize {
            path = "build.gradle"
            metricId = "GradleFileSize"
        }
        FileSize {
            path = "build/reports/tests/test/index.html"
            metricId = "ReportsFileSize"
        }
        TaskNames
        TasksCount
        ProjectProperties
        /*Custom {
            metricId = "CI"
            value = isRunOnCi
        }*/
    }
    dispatchers {
        ConsoleDispatcher
        JsonFileDispatcher
        JsonFileDispatcher {
            path = metricsOutputPath
        }
        AmplitudeDispatcher {
            apiKey = "2bdf01688c5ce7c59e820c426b5d5a3f"
        }
    }
}
